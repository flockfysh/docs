[[{"l":"Overview","p":["flockfysh, with it's API and CLI, is centralizing data collection, management, and making machine learning more accessible for everyone.","Just want quick support without any BS? Talk to the guys directly thru https://discord.gg/3pUUQA7b"]},{"l":"The Quick Run-Down","p":["flockfysh is an open platform that enables researchers to be able to openly collect data, filter and validate incoming data points, and then easily run ML pipelines without requiring expensive, in-house computational power.","We function as an exchange that supports crowdbuilding or buying/selling large scale datasets, with options to directly integrate your data collected with state of the art data lakes & warehouses, alongside your fan favorite ML services.","We are a general purpose data collection & management platform, and have seen the most common trends on our platform being the following:","State of the Art Computer Vision Problems - Segmentation, Detection, and Classification","State of the Natural Language Processing Problems - Large Language Modeling (think GPT)"]},{"l":"Goals"},{"l":"Promote OPEN Artificial Intelligence","p":["We're strongly driven by a vision that one day, we'll be able to come together to openly build models, and come together to collect the data for complex AI. AI, as it currently is, hugely relies on large amounts of training data, imprisoning it to the confines of those who can afford it."]},{"i":"control","l":"Control.","p":["The most important focus, by far, is on data ethics. We empower users to be able to implement their own data privacy policies through a public API, which restricts access to the data and can be used to enforce permissible commercially viable licenses, such as by limiting data usage, and restricting how other end users are able to view your data."]},{"l":"Build","p":["So you've come up with an idea. You've probably scanned some open dataset platform websites, competitions, and realized that data that fits what you're looking for is really hard to come by.","flockfysh enables you to directly contact people with data, interact with them, and openly source their data in a way that's consensual, and profitable."]},{"l":"Status","p":["We're currently in public beta, feel free to try out the early snapshot of the platform or shoot us an email directly at hey@flockfysh.tech if you'd like to join in with a specific use case."]},{"l":"how to reach us quickly","p":["Docs are great and all, but we also know the pain of having to wade through piles of useless crap. If you just want an answer, and want it quickly, drop by our Discord server for rapid responses - we're literally online 24/7 (yeah, we have no lives).","Link: https://discord.gg/3pUUQA7b"]},{"l":"the 30 second tour for researchers","p":["flockfysh mainly operates through a Python package, and a REST API. flockfysh's Python module also doubles down as a command line interface (CLI), which can be used to expedite various processes.","Our systems are focused on compatibility, and easily integrate into common Python ML frameworks such as PyTorch (2.0 support!) or TensorFlow. We highly recommend taking a look at our python documentation. Our systems easily integrate in, providing you, for example, with PyTorch dataset inferfaces that you can directly apply or inherit to modify.","All of our systems are built with a focus on minimizing the amount of pain (we were ML researchers by profession, as well) you have so that you can focus on pushing the bounds of AI - if you have any issues or need support with our tech, please feel free to reach out to us at support@flockfysh.tech!"]},{"l":"the 30 second tour for builders","p":["If you're working on a process that involves flockfysh datasets, we heavily recommend checking out our API. We've geared our API to be easy to use, and minimally priced (if any).","We recommend using our API in tandem with the Python module - we have a good amount of support for both, and we're constantly working on improvements, based on your suggestions. Again, if there's anything we can help with or any issues, drop us an email @ support@flockfysh.tech."]}],[{"l":"Overview"}],[{"l":"Key Definations","p":["Below are the key definitions that you will see in the product, API, and the docs.","Syntax","Description","Header","Title","Paragraph","Text"]}],[{"l":"Guides"},{"l":"Lists","p":["First item","Second item","Third item","\"Cool! This is a quotation.\""]}],[{"l":"Cheatsheet"},{"l":"This is the CheatSheet"}],[{"l":"General use","p":["Everything you need is stored in the ffysh import or in the ffysh CLI - you don't need to worry about its submodules."]},{"l":"Create a project and log in to Flockfysh","p":["Ensure your current working directory is correct.","From the terminal, run these two commands:","Log in to Flockfysh using the new browser window and click Approve to allow ffysh to use your account."]},{"l":"Datasets","p":["You'll first need to create a Dataset object first, using the 24-character ID of the dataset you want. If the dataset does not exist, an error will be thrown.","From there, you can create a stream object.","Additional dataset attributes and methods:"]},{"l":"Streams","p":["Streams are the basic unit of operation in ffysh. Each stream is a lazy-loaded snapshot of a dataset, and it expands as much as the user needs. Alternatively, you can use it as if it is a Python list.","First, store the ID of the stream for later use.","This allows the stream to reload from disk.","Note that each stream instance can only be created or loaded once, and if it is load twice, the old stream instance will be returned.","Stream methods:"]},{"l":"Limitations","p":["You must not use a stream in 2 Python programs at a time. If you want to, create a second stream or quit the first program. Although you still have to re-download labels, images will be cached in a separate directory, so that multiple streams can access the same asset.","Even if assets and their labels are deleted remotely, they will stay intact locally. We'll introduce a way to discard unused streams and purge redundant images in the future."]}],[{"l":"API"}],[{"l":"Installation","p":["Most building and transacting datasets can be done directly through our platform, but for developers and researchers, our Python package and REST API provide extra ML-oriented tooling that can expedite your workflows.","flockfysh mainly operates through a ffysh, our Python package, and a REST API.","ffysh comes in two distributions:- General package- PyTorch oriented booster tooling, accessible with the [torch] extras flag.","Open a terminal and run:","Make sure that you're using a supported version of python. We've tested fysh for the following versions:"]},{"l":"Client ID","p":["In order to use ffysh, you need to obtain a client ID key from the platform. Go to flockfysh.ai, and create an account. Go to your profile dashboard, and under the \"General\" tab, copy the API key as shown in the picture below:","image","Create a .env file, and save the API key under the FLOCKFYSH_CLIENT_ID variable. ffysh will automatically detect and use it for first step of authorization."]},{"l":"Setting up a basic flockfysh workspace","p":["Start out by initializing a workspace directory.","Perform second step OAuth authorization to obtain a device key","Now, let's download a public dataset. In order to find a dataset, we look for it's unique ID. It's hidden in the URL, as you'll see below:","If the dataset url is https://flockfysh.ai/marketplace/64c93694a8cc305c46195619, the ID for the dataset is 64c93694a8cc305c46195619.","Now, downloading all permissible assets of a dataset is simple."]},{"l":"Load a dataset directly in for training a model","p":["To generalize local dataset management, we built an open source tool called refyre, a dataset file management framework that allows you to extract and load in a dataset in any way you like.","It's designed to provide researchers with easy flexibility with large scale datasets, and mass file operations, while being intuitive enough for a second grader to be able to use.","Let's load in a couple images in the dataset we had going above. First, we load in our dataset","This dataset contains 100 jpg files, and a 100 labels, each one corresponding to a jpg. Let's see how we can seamlessly bring it to life for a ML pipeline.","Next, we start bringing in the relevant data using refyre. Add the following text to in.txt.","In a nutshell, this input specification tells refyre to extract all images, and labels, and stores them in two variables which have names specified by the name attribute (images, labels). Now, we can programmatically access them with the following lines of code.","image_var and label_var contain an array of Path objects, which can be used to individually manipulate any file as we see fit.","But right now, there's no clear way to associate the labels, i.e tell which image relates to which label. Let's fix that by creating an AssociationCluster.","Our association cluster will attempt to find the appropriate pairings, by using a mapper function. Return a valid pairing by returning anything other than a None. In our case, our images and labels follow a convention - they both have the same filestem. So, you could expect apple.jpg to have a corresponding label in apple.txt.","Next, we'd want to define some basic pre-processing we'd do before we serve our data to our model for training. Let's use some PyTorch wizardry to convert them to PIL images, and be ready to be served by a PyTorch DataLoader.","Just a basic method to tweak any association finding we find by converting the image into a tensor and resizing.","Now, let's create our cluster.","Boom. Now, we can create our PyTorch Dataset and DataLoader, with zero boilerplate using some refyre wizardry. refyre's TorchStack serves each association, applying the processor method before returning the item.","Perfect, we've set up the groundwork for a ML pipeline. We can now check the dataloader to see what's inside!","Our systems are focused on compatibility, and easily integrate into common Python ML frameworks such as PyTorch (2.0 support!) or TensorFlow. We highly recommend taking a look at our python documentation. Our systems easily integrate in, providing you, for example, with PyTorch dataset inferfaces that you can directly apply or inherit to modify."]}],[{"l":"Releases","p":["This is our Releases section"]}]]